"Settings/User settings/Authorization Management" is the designated location for creating users and defining authorizations and groups. Within this page, the Groups tab is used to manage Groups and their associated authorizations. The Users tab allows for defining users, sending messages, and matching users with groups.

GEODI authorizations are assigned to groups. The "System administrator" group can create users and groups, and add or remove users from groups. At a minimum, GEODI recommends creating "GEODI Users," "GEODI Managers," and "GEODI System Administrators" groups. The number of group members is specified, and a user can be a member of more than one group.

GEODI supports LDAP/Active Directory integration. For this integration, the machine where GEODI is installed must be in the same domain. LDAP groups are not supported; authorization groups must be defined within GEODI.

Management for users originating from LDAP occurs on the Active Directory side. Changes to passwords kept in LDAP affect GEODI, and users deleted from LDAP cannot access GEODI. LDAP users are added by mapping them to GEODI Groups; typing a user name will present similar names from LDAP as options, which aids in managing large networks of LDAP users. LDAP users appear as `domain\username`, and their management is entirely on the AD side, so no additional options are provided within GEODI for these users.

GEODI Notification services utilize the emails of LDAP users as defined on the AD side. Folder and file-based authorizations granted on the AD side are used by GEODI. GEODI cannot exceed AD side restrictions but can establish new restrictions. To use folder authorizations from the AD side, `SupportLDAPPermissions` must be set to `true` in the project detail settings under `ContentReadereEnumerators` settings.

For situations where Sharing and File Permissions or Group Permissions and Built-in Settings do not overlap, settings can be adjusted under Enumerator or Project GenericSettings. `LDAPUseDriveSharePermissions` has a default value and can be disabled by setting it to `"LDAPUseDriveSharePermissions":false`. Similarly, `LDAPUseBuiltinPermissions` has a default value and can be disabled by setting it to `"LDAPUseBuiltinPermissions":false`. When these settings are changed, re-scanning is not required; the new settings are applied to existing content using the "Adjust Permissions" feature.

Authorizations are specified for each group. The categories of authorizations may vary based on installed modules; for instance, the MOBIDI Connector application module adds categories related to MOBIDI Office. Authorizations are granted to groups, and the authorizations of users added to or removed from groups are automatically updated. If no selection is made for any group, it is interpreted as no authorization, and the authorization button becomes unlocked in this scenario.

Users in GEODI can originate from the LDAP/AD side or be native GEODI users. Management of LDAP side users is handled on the AD side, and changes such as email or password may take 10-30 minutes to reflect in GEODI, during which time old information remains valid. An invitation email can be sent to a newly added user if their email is defined. Users who forget their password can request a new one from the login page.

If the license permits, open GEODI projects can be created with guest user definitions. Guest users serve as a practical solution for informational projects, citing examples like the Ankara digital city archive or the Nigerian Ministry of Treasury projects. To activate guest users, they must be enabled in Settings, included in a group, and assigned appropriate authorizations for the project. They will appear as "guest" in the user list.

GEODI can integrate with external authentication sources such as Google and Facebook, allowing users to log in using these sources. Ready definitions are available for Google, Dropbox, Linkedin, Facebook, and Microsoft, located in a specified directory. To activate these, their extensions need to be changed to `jSettings`.

Activated external authentication resources will appear on the login page. Users from these sources must be authorized separately by including them in a group. Selecting the desired group and typing "*" in users while selecting a resource like Google will authorize all users from that Google resource. Replacing "*" with a user's email address will authorize only that specific user.

The GEODI infrastructure supports external user authentication services beyond LDAP and can integrate with other platforms used by organizations by providing specified services from `Developers.decesoftware.com`. It can also integrate with user authentication features of services like Facebook and Google.

Project-based permissions are specific to a project. If no permission is granted to any group, all users will have access to all permissions. These permissions include "Can View Project" (specifies which groups can view), "Can Edit Project" (grants permission to make changes), "Can Index Project" (authority to scan for changes or from scratch), "Can Delete Project" (permission to delete, making the delete button visible), "Can Generate Reports" (allows export reports), and "Data Operator" (authority to label and group recognized results from modules like FacePro, TextPro).

Resource-based authorizations can be configured within a project. If no permission is granted to any group, all users will have access to all permissions. These permissions include "Can Search" (specifies who can see the relevant resource), "Can Share" (allows sharing from the GEODI-defined Twitter account), "Can View/Download" (grants permission to download and view files), "Can Add Notes" (permission to add notes to files and folders), "Can Edit Others' Notes" (allows intervention in other users' notes), and "Can Add/Feed" (allows uploading files via the browser).

To view the permissions of a logged-in user and clear the permission cache in GEODI, specific API steps can be applied. User permissions can be viewed by navigating to `Api → User Manager Api section → UserInfoFull` and clicking `[RUN]` on `GetCurrentUserInfoWithPermissions()`. The permission cache can be cleared by navigating to `Boolean` and clicking `[RUN]` on `ClearCurrentUserPermissionCache()`, which immediately reflects permission changes.

By default, System Admins are privileged and have permission to see all content. This behavior can be overridden by setting a specific value to `TRUE` (default is `FALSE`) in the `SystemSettings` file, which will affect all workspaces. Details are available at `https://support.decesoftware.com/space/DEV/1390184262/System+Configuration+-+Security+Settings`.

After overriding SystemAdmin superuser permissions, it is necessary to set specific permissions for each data source. For example, a DPO group's members could be authorized to open, report, and inspect all findings, while SystemAdmins are not, for a source named SG-43. This process must be repeated for other sources. Initially, when all checkboxes are off, it means all permissions are on; however, once a box is checked, permissions behave as expected, and individual permissions must be granted.