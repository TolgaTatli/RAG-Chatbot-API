This object can be used to provide more detailed content to the Geodi Data Extraction API (Formatter) and Geodi Feed Api (FeedHandler) services. With the definitions to be sent, privileges, special display name, special display address of the content, path, URL, or whole content (byte []) can be forwarded to the service. All properties of objects can be accessed via Geodi using the "Single Content - ContentObject" and "Multiple Content - IntegrationObject" addresses.

The "Single Content" object includes a `Mode` (int, optional) property, which conveys transaction information. The default value for `Mode` is 0, indicating Added or Changed content. Other values include 1 for Deleted content and 2 for Only Authorization Change. The `ContentURL` (string) property specifies the content's path, which must be unique and show content, and can be exported as a URL or Disk path. `DisplayName` (string) is the name of the image to be displayed in the search result, and `ContentDate` (GMT string, optional) indicates the content's date.

The `ViewURL` (string, optional) property defines the display address of the content. If `ViewURL` is not specified, GEODI displays the content using its viewer without resorting to an external application. When specified, it directs the user to this URL to access the content. Definitions available within the `ViewURL` include `{wsName}` for the project name defined on GEODI, `{unc}` for the `Content.Content_Id` value passed during feed, `{viewParam}` for document opening parameters sent to GEODI Viewer, and `{user}` for the active user. However, the `{user}` value should not be relied upon for authentication, as it is part of a redirect process and the user can modify the browser. An example usage is `ViewURL:".../MyViewer.aspx?ID={unc}&wsName={wsName}"`.

Further properties of the "Single Content" object include `Thumbnail` (string, optional), which is the preview image for search results and can be returned as a base64 encoded image or an image path. `FastViewHTML` (string, optional) allows the search result to be displayed with the content if specified. `TextURL` (string, optional) is used to retrieve the text content of the document if it is defined and does not return a blank result; if a result is returned, `ContentURL` is not called.

`TextData` (string[], optional) allows additional text information, such as OCR or searchable text content, to be transmitted. Each element in the `TextData` array must correspond to one page; if paging is not known, only one element containing all text should be sent. Unlike the `TextURL` property, values passed via `TextData` are appended to the content, processed as `ContentURL + TextData` or `TextURL + TextData`.

The `MetaData` (object array, optional) property contains Key/Value pairs that are reflected in search results and do not need to be specified separately in the content. Each metadata entry includes a `Name` (string) for the metadata key name and a `Value` for the metadata key value. `GType` (string, optional) specifies the value's type, with `System.TypeCode` and `Geom` values available, and `String` as the default. `DDoubleValue` (advanced, optional) is a normalized value, `DText` (advanced, optional) represents string values, and `DAttributes` (advanced, optional) provides additional information, such as KM, Parcel, or Name, to ensure the value is accepted as a kmi name or parcel.

The `Content` (object, optional) property is used if content is transmitted without returning to `ContentURL`. Within this object, `Extension` (string) specifies the content extension, such as `.pdf`, `.zip`, `.rar`, `.dwg`, or `.form` for form content. The nested `Content` (optional) property can hold base64 byte array content or plain text, where `ContentUrl` is used only as an ID. `ContentForcedBytes` (optional) allows content to be given as a byte array, and if defined, `Content.Content` is ignored, with `ContentUrl` again used only as an ID.

Advanced content properties within the "Single Content" object include `CurrentSections` (advanced-section, optional), an array containing section information of splitters, used to return to content (e.g., on what page, in which cell). `Properties` (advanced-section, optional) is an array containing additional information of splitters and finalization information for Recognizers. Special operations are performed for content in specific columns or layers, such as parcel, first name, or last name (e.g., in which table, in which layer, in which column). `Splitters` (advanced, optional) represents values fragmented from the content, such as lines, paragraphs, or pages, and can use `string`, `string[]`, or `object[]` `SpliterType` values, each with different features. The `GType` value in a splitter is the same as in `MetaData`.

The `Permission` (object, optional) property for "Single Content" has the same features as Root Permission. It is used to define customized privileges on a file-by-file basis and works in conjunction with the Root Permission. This `Permission` object includes `Permit[]` for allowed user/role/group lists and `Deny[]` for prohibited user/role/group lists.

The "Multiple Content" object includes `PageCount` (int, optional), which allows the application to reduce resource usage by returning the number of pages in the first `GetContents` request. The server status can determine the size of the content that will return with the service and the internal authorization mechanism, allowing content to be returned all at once or page-by-page. `ChangeKey` (string) is the value to be passed to the application for the next scheduled scan. `Contents` (object array) is an array of `ContentObject` instances.

The `Permission` (object, optional) property within "Multiple Content" is used for document-specific viewing privileges. GEODI does not provide the ability to modify, edit, or delete content obtained with this service. All contents returned by `Contents` in this service call will have these privileges. When authorization is used, the `GetContent` list should return documents affected by authorization changes. `Mode: 2` should be set only if it is known that the privileges have changed. This `Permission` object includes `Permit` (string array, optional) for allowed user/role/group lists and `Deny` (string array, optional) for prohibited user/role/group lists.