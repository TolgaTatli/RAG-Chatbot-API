GEODI provides rest API services, allowing query results to be used in applications via the Geodi Query API. GeodiQueryJS enables displaying results in various formats or utilizing libraries such as Angular.js and Vue.js. To use the Standard or Simple API, a Token, Geodi Project name, and Geodi URL information are required.

To display query results in an application using GeodiQueryJS, the GeodiQueryJS.js library must be included in the project and a template specified. The template definition is consistent with tools like Angular and Vue.js. Object properties usable in the template can be found in the debug console of the running browser or from the Geodi Query API - Document Search service document. To display the value of data.DisplayName in an HTML template, {{data.DisplayName}} must be used.

For loop and condition functionalities, the d:r tag and data/visible attribute values are available. The data attribute is used to determine the data circulated in a loop, with the initial data value at the template's beginning representing the list of results. Within each d:r tag, data converts to the value of the data, and data.parentdata can access content outside the loop if needed. The visible attribute displays the d:r field if its condition is valid, otherwise, the content is ignored. A block containing visible is checked once with the data, even if not directly used with data. For checks on each item in a loop, a separate d:r element must be created.

The HttpUtility helper class is available for encode/decode operations. To access properties of an object used in a template, the {{debugger; }} expression can be used to examine data and context objects through the console.

GeodiQuery.js contains a preset template definition, allowing users to obtain results without defining any custom templates. More examples are available through live demo projects, which utilize a token for the guest user. Sample code for Query_GeodiQueryJS.html is provided at https://github.com/decesw/html/blob/master/DocumentQuery/Query_GeodiQueryJS.html. An interface for template editing is also available.

Rest API results can be exported to any library that supports template rendering. Results from the Geodi Query API (Query) can be displayed by using JSON as required by the library. All examples are accessible from https://github.com/decesw/html/tree/master/DocumentQuery. These samples run using live demo projects and employ a token for the guest user. Specific sample code links include https://github.com/decesw/html/blob/master/DocumentQuery/Query_AngularJS.html, https://github.com/decesw/html/blob/master/DocumentQuery/Query_VUEJs.html, https://github.com/decesw/html/blob/master/DocumentQuery/BasicQuery_AngularJS.html, and https://github.com/decesw/html/blob/master/DocumentQuery/BasicQuery_VUEJs.html.