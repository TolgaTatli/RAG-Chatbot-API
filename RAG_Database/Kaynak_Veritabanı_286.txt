GEODI veri tabanlarını indeksleyebilir veya veri keşfi yapabilir. Veri tabanları ve içerdiği dosya bilgileri, gömülü olanlar dahil, indekslenebilir; bu, bütün tabloları ve satırları kapsar. Kullanıcılar, basit kurallar kullanarak tabloları, satırları veya alanları sınırlayabilir ve satırların kullanıcıya nasıl gösterileceğini ayarlayabilir.

Veri tabanı bağlantısı Proje sihirbazı/Veri Tabanı aracılığıyla sağlanır. Bağlantı için gereken şartlar arasında veri tabanı için bir bağlantı cümlesi (port, veritabanı adı gibi) bulunur ve readonly erişim yeterlidir. Bağlanılacak VTYS adının listede bulunması ve ek bir sürücü/driver gereksinimi olup olmadığının kontrol edilmesi önemlidir, örneğin Oracle için ODAC gerekebilir. Örneklemeli keşif kararı (her tablo için N kayıt) ve gömülü ya da linkli dosyaların indekslenmesi ve keşfi için karar verilmelidir. "Bağlantı tanımla" işlemi ile veri tabanı seçilir ve uygun bağlantı cümlesi (connection string) tanımlanır. Listede yer almayanlar için OLEDB veya ODBC seçenekleri çözüm olabilir. Detaylı bilgiler için https://decesw.atlassian.net/wiki/spaces/geoditr/pages/edit-v2/3952811067#Desteklenen-Kaynaklar linkinden yararlanılabilir. İstenirse View'lar hariç tutulabilir; bu, duplike bilgi keşfini azaltır ve performansı artırır çünkü View'lar genellikle diğer tablolardaki bilgileri içerir.

GEODI'nin varsayılan indeksleme davranışı, bir veri tabanındaki tüm tablo ve satırların indekslenmesidir. Kullanıcılar, veri tabanındaki tabloların sadece bazılarını seçebilir veya keşfedilecek içeriği bir SQL sorgusu ile belirleyebilir. Varsayılan olarak sadece PrimaryKey (PKKey) tanımlı tablolar indekslenir. PKKey tanımlı olmayan tabloları keşfetmek için ayar değiştirilebilir; bu durumda değişenleri keşfet işlemi her satır için sürekli versiyon oluşturacaktır. Örnekleme modu ile her tabloda sadece seçili sayıda satırın indekslenmesi sağlanabilir. Kolonlar isimlerine göre sınırlanabilir. Gömülü dosyalar ve dosya yolu olan satırlardaki dosyalar uygun tanımlar ile indekslenebilir. Eğer satırlarda yetki bilgisi varsa, satır bazında yetki tanımlanabilir. GEODI her satırı bir içerik olarak görür ve DBMeta tanımları ile veri tabanı veya tablo bazında satırların ve başlıkların nasıl görüneceğini belirleyebilirsiniz.

Bazı veri tabanları için GEODI’nin kurulu olduğu sunucuda ek driver gerekebilir. Aşağıdaki listeden kontrol edilmesi önerilir. Listede yer almayan Veri Tabanı Yönetim sistemlerine veya kaynaklara OLEDB ile bağlanmak mümkün olabilir; bu amaçla GEODI kurulumu ile birlikte gelen küçük bir yardımcı yazılım kullanılabilir. Bu yazılım sisteme kaydedilmiş OLEDB kaynaklarını listeler ve GEODI Bağlantı ayarlarında yer alan detay parametreleri denemek gerekebilir. Listede olmayan kaynaklar için, kaynağa ait bir OLEDB driverı kurmak gerekebilir ve kaynağın teknik dokümantasyonu izlenmelidir. ODBC kaynakları için ODBC Veri Kaynağı Yönetici ile ODBC bağlantısı için driverın kayıtlı olup olmadığı kontrol edilebilir. Listede olmayan ODBC kaynakları için de kaynağa ait bir ODBC driverı kurmak gerekebilir ve teknik dokümantasyon izlenmelidir.

Elasticsearch için versiyonuna göre ODBC driver indirilmelidir; indirme linki https://www.elastic.co/downloads/past-releases#odbc-client adresindedir. ODBC kurulumu için Microsoft Visual C++ Redistributable for Visual Studio 2017 gereklidir ve ilgili link https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist adresindedir. Konfigürasyon bilgisi için https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-odbc-setup.html linki kullanılabilir. GEODI Bağlantı tanımları için gerekli olan string örneği: `Dsn=my_elasticsearch_dsn;Driver={Elasticsearch Driver};description={my description};uid=username;pwd=password;server=your_es_host;port=9200`. PostGres, Microsoft SQL Server, SqLite, Shape File, CSV File, KML File, SQLCE, SQL Express ve Kafka için ekstra bir kurulum gerekmez. Sybase için ODBC Driver kurulu olmalıdır.

Oracle (OleDB) için ODAC OUI ve ODAC 12.1.0.2.4, https://www.oracle.com/database/technologies/dotnet-odacdev-downloads.html linkinden indirilir. İndirilen ODAC 12.1.0.2.4 bir dizine açılır. CMD yönetici olarak çalıştırılır ve ODAC 12.1.0.2.4’nin bulunduğu dizine gidilerek bir komut çalıştırılır. Bu komut tüm bileşenleri yükler, yükleme yapılacak hedef dizini belirler, Oracle Home adını tanımlar ve bağımlılıkları yükler. DB2 için OLEDB Driver kurulu olmalıdır; bu driver https://www.microsoft.com/en-us/download/details.aspx?id=100917 adresinden indirilebilir. Oracle BigData için Microsoft Hive ODBC Driver kurulu olmalıdır; bu driver https://www.microsoft.com/en-us/download/details.aspx?id=40886 adresinden indirilebilir. Excel ve MS Access için Access Database Engine 2010 kurulu olmalıdır; bu motor https://www.microsoft.com/en-us/download/details.aspx?id=13255 adresinden indirilebilir. Cassandra ve MongoDB için OLEDB ya da ODBC driver kurulması gereklidir; Cassandra için https://www.cdata.com/drivers/cassandra/download/ ve MongoDB için https://www.devart.com/odbc/mongodb/ adreslerinden indirilebilir.

SQLite, MDB, AccDB gibi dosya bazlı kaynaklar, şifre korumalı değillerse dosya olarak bulundukları zaman otomatik olarak indekslenirler. DBMeta tanımları varsa dikkate alınır. Excel dosyaları için proje Sihirbazı kullanılmalıdır. Proje Sihirbazı/Veritabanı ile yapılan ayarlar *.xDeceConnection formatında saklanabilir. Bu dosyalar bulundukları zaman otomatik olarak işlenirler. xDeceConnection ile bağlantılar farklı yerde yapılabilir ve taşınabilir. Şifreler ve bağlantı cümlelerinin güvenliği sistem güvenlik ayarlarına bağlı olacaktır.

Veritabanı kaynakları taramasında herhangi bir sonuç alınamadığında, bağlantı dizesinin doğru olmayabileceği ve projenin kaydedilmeden önce test edilmesi gerektiği belirtilir. İzinler kontrol edilmeli ve indeks hata günlükleri incelenmelidir; GEODI üzerinden geliştirici raporu ile taranan hatalar görülebilir. DBMeta'ların doğru olmayabileceği ve Jsettings dosyalarının sözdiziminin https://jsonformatter.curiousconcept.com/ kullanılarak doğrulanması gerektiği belirtilir. Sütun, tablo ve GEODI proje adlarının doğruluğu ile bunların Veritabanı/Tablo/Sütun üzerindeki adları kontrol edilmelidir.

Eğer kaynak olarak veri tabanı bağlantısı yokken projede tablo (*.geodi_table) ve vtsatır (*.geodi_row) görülüyorsa, GEODI'nin varsayılan olarak SQlite veya Access gibi dosya tabanlı veri tabanlarının sadece adını indekslediği anlamına gelir. Tablo ve satırların da indekslenmesi için DECE-STORE’dan ilgili modülün kurulması gereklidir. Gömülü veya bağlantılı dosyalar gösterilmiyorsa, DB meta tanımlanması gerekmektedir.

İndeksleme yavaşsa, varsayılan olarak GEODI'nin tüm tablo ve satırları taradığı belirtilir; örnekleme keşfi kullanılarak veya hedef daraltılarak hız artırılabilir. Veritabanının başka bir uygulamaya hizmet ediyor olabileceği veya GEODI indeksleme hızı seçeneklerinin düşük olabileceği (artırılması gerektiği) belirtilir. GEODI Sunucusunun düşük kapasiteli bir makinede çalışıyor olabileceği (yetersiz bellek veya yavaş disk) ve sistem gereksinimleri sayfasının kontrol edilmesi gerektiği ifade edilir. Veritabanı satır sürümleri artıyorsa, ilk indeksten sonra her indekslemenin (zamanlanmış veya manuel) birincil anahtarı olmayan tablolar için sürüm oluşturabileceği belirtilir. Bu durum keşif sonuçlarını veya raporları etkilemez, ancak yalnızca GEODI İndeks boyutunu etkiler. GEODI indeksleme, bu tür tabloları hata günlüklerinde oluşturur; hangi tabloların etkilendiğini görmek için hata günlüğü kontrol edilmelidir. GEODI, varsayılan olarak, birincil anahtar (PK) sütunu bulunmasını gerektirir; aksi belirtilmedikçe bu durum meydana gelmez. Tablolara bir PK eklemek en iyi uygulama olarak önerilir. GEODI için bir PK sütunu, her satırda benzersiz bir değere sahip bir sütundur. Tabloda bir PK varsa ancak hala hata alınıyorsa, birincil anahtar sütun adının GEODI'ye bir DB meta tanımlayarak kaydedilmiş olması gerekmektedir.

Yetkiler geçerli değilse, GEODI varsayılan olarak aynı yetkilere sahip tüm satırları okur. Satır bazlı bir yetki belirlemek için DB meta kullanılması önerilir. Sıkça sorulan sorular arasında, dosya veya satır yetkilerinin keşfedilip keşfedilemeyeceği yer alır; evet, birkaç basit DBmeta tanımı ile satır bilgisi ya da dosyaların yetkileri keşfedilebilir. Tablolardaki gömülü dosyaların indekslenip indekslenemeyeceği de sorulur; evet, birkaç basit DBmeta tanımı ile bu dosyalar indekslenebilir ve bu durumda GEODI, satırı ve dosyayı ayrı ayrı gösterecek, dosyayı DB özniteliklerini kullanarak sorgulamaya olanak tanıyacaktır. GEODI araması aracılığıyla CRM uygulamasının nasıl açılabileceği de sorulur; mümkündür, CRM veritabanı indekslenir ve basit bir DB meta kullanarak orijinal CRM uygulamalarını açan bir bağlantı kurulur, CRM uygulamasının öznitelikleri kullanarak oluşturulabilen basit bir URL (sorgu dizesi) olmalıdır.

DB Meta Tanımları hakkında detaylı bilgiye ilgili sayfadan ulaşılabilir.