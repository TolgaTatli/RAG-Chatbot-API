GEODI configuration settings are managed by creating a `SystemSettings.json` file in the same directory as `GEODI.exe`. A sample JSON file is available in `SystemSettings.ReadMe.txt`. It is important that the JSON content does not include any comments. The settings file is read only once, so any changes require a restart of `GEODI.exe` or the IIS Pool used by GEODI. By default, GEODI restricts REST API calls from other domains, but this can be configured by defining allowed domains within `SystemSettings.json`.

The `AppDataFolder` setting, a string with a default null value in the System category, specifies the path for application data including Project, Log, Default Index, Dictionaries, and all metadata. If null or empty, the `AppData` location is used. For IIS environments, a common path for `GEODI.exe` and GEODI can be set, with `%App%` representing the application folder. `System.Environment.SpecialFolder` values can be used in path definitions within `%%`. To ensure compatibility with `GEODI.exe`, the folder name can be retrieved by typing `%appdata%` in Windows Explorer's address bar. An example configuration is `{"AppDataFolder":"C:\\GeodiDataFolder"}`.

The `AppPort` setting, an integer with a default value of 3323 in the WebServer category, defines the port for the Web Server started via `GEODI.exe`. If set to 80, client-side port specification is unnecessary. Similarly, if the `SSLCertificate` setting is configured and the 443 SSL port is used, clients do not need to specify ports. The "Port" key can also be passed as an `exe` parameter. The `AppIP` setting, a string with a default null value in the WebServer category (available from version 7.0.1.25977+), specifies the IP address for the WebServer initiated by the executable. By default, the server broadcasts on all IP addresses. The "IP" key can also be used as an `exe` parameter.

The `ModuleStoreFolder` setting, a string with a default null value in the System category, is used to store `*.GeodiModuleX` files for offline automatic module updates. If this setting is not configured, GEODI will utilize DECE-STORE for updates. The `SocketReceiveTimeout` and `SocketHeaderReceiveTimeout` settings, both integers with a default value of -1 in the WebServer category, define the default connection timeout and the default timeout for reading headers, respectively, for the application in milliseconds.

The `TrustedRefererSiteList` setting, a string array with a default null value in the WebServerSecurity category, is used to define sites that are trusted for providing links to the system, using Iframes, and accessing the Rest API. It accepts the `*` wildcard. This setting aims to prevent misleading requests from users via standard browsers. By default, all sites are allowed. The `TrustedOriginSiteList` setting, also a string array with a default null value in the WebServerSecurity category, uses POST Data to determine which sites are trusted for Iframe and Rest API access, also accepting `*`. This setting also aims to prevent misleading requests from users through standard browsers, but by default, no sites are allowed. An example configuration is `{"TrustedOriginSiteList":["*"]}`.

The `TrustedOriginUICheck` setting, a boolean with a default value of true in the WebServerSecurity category (available from version 7.0.1.26096+), controls access based on origin and tokens. If set to false, origin and token access control is only performed for REST API requests. If true, no content outside of the `gui / public / folder` will be served to sites not on the `TrustedOriginSiteList` or not accessing with tokens. The `DisableCSRFSecurity` setting, a boolean with a default value of false in the WebServerSecurity category, disables custom additional security settings for the Webserver. Its purpose is to prevent misleading requests from standard browsers. Disabling this setting offers a minimal performance increase (less than 0.01%), and it is recommended to keep it enabled.

The `XSSSecurityMode` setting, an integer with a default value of 0 in the WebServerSecurity category (available from version 8.0.0.27386+), configures how HTML content in form and querystring values of incoming requests is handled. This setting does not add an HTTP header; the `HttpHeaders` setting should be used for that purpose. A value of 0 (Default) preserves only required fields, offering high performance and safety. Other options can be used temporarily for unexpected detections. A value of 1 (ToSafeHTML) allows only basic HTML tags like `b`, `i`, `h1` for all incoming fields, significantly reducing performance. A value of 2 (ClearHTML) clears all incoming HTML tags, also greatly reducing performance. For options 3-6, GEODI version 8.0.0.27658+ is required. Option 3 (ThrowErrorHasHTML) throws an error if HTML is present in the request. Option 4 (SmartMode_ToSafeHtml) performs safe HTML conversion only for required fields, functioning similarly to the Default option. Option 5 (SmartMode_ClearHTML) clears HTML expressions only for required fields. Option 6 (SmartMode_ThrowErrorHasHTML) throws an error if HTML values are sent in fields that require control.

The `HttpHeaders` setting, a string array with a default null value in the WebServerSecurity category, allows defining header information to be sent to the client in `HTTP_HEADER:VALUE` format. This can be used to configure browser-side security settings based on API usage. A sample configuration is `HttpHeaders: ["X-XSS-Protection:1", "X-Content-Type-Options: nosniff"]`. The `ShowWebExceptionStackTrace` setting, a boolean with a default value of false in the WebServerSecurity category, enables the display of error details for Web request errors. By default, these details are not displayed.

The `LogExceptionStackTrace` setting, a boolean with a default value of false in the System category, allows for logging additional details of Scan and System startup errors. The `ServerNames` setting, a string array with a default null value in the WebServerSecurity category, provides server name information for the WebServer started via `GEODI.exe`. When this setting is defined, subdomain usage is blocked; for instance, if `servername` is `myserver`, requests to `sub.myserver` will not be accepted. An example configuration is `{"ServerNames": ["localhost","127.0.0.1","www.myserver.com","myserver.com"]}`.

The `EnableUrlSession` setting, a boolean with a default value of false in the WebServerSecurity category, permits session transfer via URL if enabled. This is not a recommended configuration setting. The `TileExpandPercent` setting, a double with a default value of 20.0 in the WMSServer category, specifies the default tile enlargement ratio used for labels on the WMS Server. The `VerisonExtenderText` setting, a string with a default null value in the System category, is used to modify the version code for content sent to the browser. This can be useful for resetting the browser cache when preparing a theme.

The `UseDefaultCredential` setting, a boolean with a default value of true in the System category, forces the use of system proxy settings for remote connections, such as website crawling. The `ServerUri` setting, a string with a default null value in the Notification category, determines the web address to be used in links specified by background services, such as email sending. The `AutoRecovery` setting, a boolean with a default value of false in the System category, automatically corrects faulty entries without approval in cases of power failure or disk failure.

The `AutoIndexUpdate` setting, a boolean with a default value of false in the System category, allows the GEODI version to update Indexes without approval if necessary. The `AutoIndexUpdateAndRecovery` setting, a boolean with a default value of false in the System category (available from GEODI 7.0.1.26858+), is not required when GEODI is used under Service or IIS. This setting automatically corrects faulty entries in the event of power or disk failure without approval and, if needed, updates Indexes without approval based on the GEODI version.

The `IgnoreSystemAdminContentAccessPrivileges` setting, a boolean with a default value of false in the WebServerSecurity category (available from version 8.0.027625+), cancels the privileges for viewing, opening, and downloading content for the "System Administrator" authority if set to true. These capabilities are typically expected to be authorized even for a "System Administrator" and can be managed on a project basis using `Settings.SystemAdminMode` within the GEODI application. The `DisableBasicAuthentication` setting, a boolean with a default value of false in the WebServerSecurity category, turns off Basic Authentication support. All authentication services on GEODI are protected against automated trial attacks.

The `SecurityProtocolForRequest` setting, an integer with a default value of 3120 in the System category (available from GEODI 7.0.1.26674+ and MOBIDIOfis 5.0.0.13115+), is used to set the security protocol for HTTP calls to different servers. Defined values include SSL 2 (12), SSL 3 (48), TLS 1.0 (192), TLS 1.1 (768), TLS 1.2 (3072), and TLS 1.3 (12288). The default value of 3120 corresponds to TLS1.2 + SSL 3. The `SecurityProtocolForResponse` setting, an integer with a default value of 16368 in the WebServerSecurity category (available from GEODI 7.0.1.26674+ and MOBIDIOfis 5.0.0.13106+), is used to set which security protocols are supported if SSL settings are configured. Defined values are the same as for `SecurityProtocolForRequest`. The default value of 16368 represents TLS 1.0 + TLS 1.1 + TLS1.2 + TLS 1.3 + SSL 3, which is an inclusive value supporting legacy clients. An alternative value of 15408 corresponds to TLS1.2 + TLS 1.3 + SSL 3, compelling clients to use secure communication.

The `SSLLocalCertificateSerial` setting, a string with a default null value in the WebServer category (available from version 6.1.0.24659+), activates SSL using a valid certificate installed under Computer Certificates / Personal. This method is an alternative to specifying a certificate file with `SSLCertificate` and is preferred for SSL definition if there is no special case, as it does not require a password. The value can be found in the Details→Serial number section of the certificate in Windows. If GEODI is run over IIS, this setting is not used, and IIS definitions are applied instead. If `AppPort` is set to 443, client-side port specification is not needed.

The `SSLCertificate` setting, a string with a default null value in the WebServer category, specifies the location of the SSL certificate file. If defined, `GEODI.exe` will only respond to HTTPS requests. Supported file extensions include `.cer`, `.p7b`, and `.pfx`. This method is not preferred if there is no special case; the `SSLLocalCertificateSerial` setting should be used instead. If `AppPort` is set to 443, client-side port specification is not needed. The `SSLCertificatePass` setting, a string with a default null value in the WebServer category, specifies the password for the SSL Certificate file if it is used. This can be open text or non-portable crypto with GEODI tools. Similar to `SSLCertificate`, this method is not preferred if there is no special case, and `SSLLocalCertificateSerial` should be used.

The `SSLErrorLog` setting, a boolean with a default value of false in the WebServer category (available from version 6.1.0.24659+), logs all SSL validation errors if set to true. The `NoSSLPort` setting, an integer with a default value of 0 in the WebServer category (available from version 6.1.0.21550+), provides the HTTP service from a specified port if SSL is configured and the port is not 0. The `ForceHttpsRedirect` setting, a boolean with a default value of false in the WebServer category (available from version 6.1.0.21550+), redirects all HTTP requests to the HTTPS address if `NoSSLPort` is set.

The `AutoForwardedURL` setting, a string with a default null value in the WebServer category (available from version 6.1.0.23511+), specifies the server address to use when routing header information containing "X-Forwarded-For" is received. Penetration safety measures may interfere with such orientations. If a DMZ Proxy or IIS Rewrite Proxy is used for cross-network or port forwarding, the `TrustedRefererSiteList` and `TrustedOriginSiteList` settings in `SystemSettings.json` must be adjusted to accept the address displayed in the browser. The address shown in the browser should be written in `AutoForwardedURL`. An example configuration is `{"TrustedRefererSiteList":["*.mypublicwebsite.com*"], "TrustedOriginSiteList":["*.mypublicwebsite.com*"], "AutoForwardedURL":"http://www.mypublicwebsite.com"}`. The "AutoForwardedURL" key can also be passed as an `exe` parameter.

The `SystemTray` setting, a boolean with a default value of true in the WindowsGUI category (available from version 5.3.0.16891+), determines how `Geodi.exe` opens. If true, it opens as an icon in the Windows Notification Area, without displaying form interfaces, allowing process management via right-click menus. If false, `Geodi.exe` is located on the left, and this setting requires IE9+ to function. The `Theme` setting, a string with a default value of "Square" in the GUI category (available from version 6.0.0.18338+), defines the default theme. Folder names located under `GUI/Theme` can be used.

The `Language` setting, a string with a default value of "Kurulum Dili" in the System category (available from version 6.0.0.18398+), sets the default language. A language code must be provided. If not set, the installation language is used. The "Language" key can also be passed as an `exe` parameter. The `LogMode` setting, an integer with a default value of 0 in the System category (available from version 6.1.0.21152+), determines the information to be logged. Logging is not performed by default. It functions as a flag, and logs are stored under `Appdata / Logs / [APP] / DebugLog`. A value of 0 means no logs. A value of 1 enables logging of all database queries (SQL). A value of 2 logs information of users connected to the system (UserData). A value of 4 logs all HTTP requests (Request). A value of 8 logs all HTTP requests with full detail (Request Detail). A value of 16 (requiring 7.0.1.26660+) logs web requests and addresses to external servers (CreateHttpRequest).

The `SessionTimeout` setting, an integer with a default value of 120 in the System category (available from version 6.1.0.21152+), defines the maximum inactivity time allowed for a user before the automatic logout process begins. The `DefaultWS` setting, a string with a default value of "My Computer" in the System category (available from version 6.1.0.25423+), is the default project name in the GEODI ES / DA interface. It is used if the URL does not contain a `wsName` or if no project is remembered for the current user.

The `LoginProviders` setting, a string array with a default null value in the System category (available from version 7.0.0.25611), is used to limit the `LoginProvider` definitions that can be used to log into the system. By default, login with all recognized providers is allowed. For example, if `["LDAP"]` is specified, it is not possible to log in with Geodi users; only LDAP users can log in. The `ClientProtectionKey1` and `ClientProtectionKey2` settings, both strings with a default null value in the WebServerSecurity category (available from version 6.1.0.25423+), relate to user internal token crypto changes for each server. The entropy for encryption can be adjusted using the values provided here.

The `MaxUrlSize` setting, an integer with a default value of 2048 in the WebServer category (available from version 7.0.001.25764+), determines the maximum URL size. There is no limit for requests made using POST. It is important to note that if an IIS-like Web server is used instead of `GEODI.exe`, settings within the `WebServer` category are not applied, but `WebServerSecurity` settings remain in effect.