GDE is an agent-based discovery solution designed to index data on endpoints and file servers without requiring share definitions. It operates across Windows, Linux, macOS, and Pardus environments. The GDE agent specifically indexes and discovers numerous PCs or File Servers without needing share definitions, and it runs on Windows, Linux, or macOS. Additionally, GEODI possesses the capability to discover remote servers even without an agent.

A connection for GDE is established by navigating to Project Wizard/Feed Source/GDE, which generates a Batch file necessary for installing the GDE agent. This batch file can be copied and utilized with deployment tools such as ManageEngine or SCCM, or manual installation is also an option. GDE initiates discovery using the default directories specified on this page and repeats this process approximately every 3 hours on each machine. Content collected from different machines is then queued and processed on the GEODI server. Active agents can be monitored through a dedicated Panel.

To establish a GDE connection, a user with sufficient privilege levels is required to install agents on client machines, though variations may exist for Linux and macOS clients. For deploying to a large number of clients, a tool like ManageEngine or SCCM is necessary. Client machines must have access to the GEODI server, and conversely, the GEODI server must have access to the client machines, with port 1982 (which is configurable) open.

GDE agents are automatically downloaded to the GEODI directory alongside the GEODI Discovery module, with the required MSI files located within this directory. Windows agents will automatically update themselves from this directory when a new version is released. For offline environments, manually updating the modules on the GEODI server is sufficient. The GDE Agent can be accessed via the path `/GUI/Agents/GDE`, where refers to the GEODI Server address.

If indexing does not start, several checks can be performed. Verify that the client has access to the GEODI Server by attempting to access GEODI through a browser on the client. Ensure the GEODI server is accessible from the client's GDE by entering `http://<GEODI Server Address>:1982/DEW?op=GetStatus` in a browser on the client, which should return null if everything is fine. Confirm that the ExplorerPort, such as 1982 or the chosen port, is open. Inspect Firewall, Antivirus, or similar tools for any blocking mechanisms. Check if the client machine is operational and if GDE is installed and running, indicated by `Geodi.Desktopexplorer.exe` in the task list. Verify the status of the received TOKEN. If the endpoint's status looks good in the Agent Management Panel, waiting may resolve the issue as the GEODI Server queues incoming data. If data is still not coming through despite other checks, examine the `FolderList` and `IgnoreFiles` values in the GDE rules. If an expected file type is not received, ensure its extension is not listed in the `IgnoreFiles` value in the GDE rules.

If GDE settings are not effective, the setting file may not be a valid JSON and should be validated with an online tool. Settings generally adjust within an hour, but if the endpoint's IP has changed, this process may take up to 3 hours. By default, some large files, such as videos, are blocked from indexing; specifically, files larger than 100 MB or compressed files larger than 500 MB are blocked. These default settings can be changed, with changes becoming effective in about an hour.

If an endpoint has been formatted, GDE should be installed as usual; the endpoint will be treated as new, but the old data is preserved. If port 1982 is unavailable, it can be changed to any other available port, with caution to avoid already used ports. Setting the GDE port to 0 is an option, which allows search and discovery to remain unaffected, but GEODI will not be able to open remote files in this configuration.

To query files from a specific endpoint, add `endpoint:<endpoint name>` to the query; for example, `endpoint:PC1` will query files from PC1, `endpoint:PC1 pdf` will list PDF files, and `endpoint:PC1 pdf contract` will list PDF files containing the word "contract". Remote files can be classified by the GEODI legacy data classification tool, provided the classification agent is installed on the same endpoint.

GEODI remediation tools are capable of covering remote files. The only requirement for remediation is that the user must have delete/update permission on the remote machines, enabling GEODI to delete, make, or encrypt remote files similar to local ones. If an endpoint machine is closed, search functionality remains unaffected, but it becomes impossible to open, view, or remediate the files.

GDE does not copy local files. However, if local file backup is needed, the "backup content" option in the GEODI source dialog can be checked, and this setting can be activated or deactivated at any time. Regarding file visibility from endpoints, System Admins can see all files. Other users' permissions are dependent on the `Enable LDAP` settings; if LDAP is enabled, local permissions are utilized. It is also possible to configure each user to see only their PC files by contacting the DECE team.

GDE configuration settings are located on the GEODI server within the `/Settings/Geodi.DesktopExplorer` folder, typically in a file named `default.json`. Installed GDEs automatically retrieve these settings approximately an hour after they are defined. Any changes made to these settings will become effective in about an hour, and settings can be modified while GEODI is running. To define different rules for individual machines, additional configuration files can be used, named as `<MachineName>.json`, `<IPAddress>.json`, or `<UserName>.json`.

The `FolderList` setting, a string array, is used to specify the folders that GDE should scan. Multiple folders can be identified by separating them with commas. This setting supports Windows, MacOS, and Linux client folders interchangeably. The default directory includes common user folders such as documents, downloads, and desktops. Values for this setting are case-sensitive, and subdirectories can also be defined. To scan all disks, the value `["*"]` can be used.

The `ExplorerPort` setting is an integer with a default value of 1982. Alternatively, the port value can be set to 0, which allows discovery and search to function correctly, but prevents GEODI from opening local files. The `EnableLDAP` setting is a boolean; if set to `true`, it enables the indexing of LDAP authorizations for files. Its default value is `false`.

The `IgnoreFolders` setting is a string array used to list folders to ignore, accepting `*` as a wildcard. It is used in combination with settings under `Geodi Settings/IgnoreFolders`. Similarly, the `IgnoreFiles` setting is a string array for listing file types to ignore, also accepting `*`, and is used with settings under `Geodi Settings/IgnoreFileTypes`. In both cases, GEODI central file/folder ignore rules always take precedence, with the restrictions specified within these settings applied additionally. By default, to safeguard network resources, only the name and date of files larger than 100MB are indexed, with this limit extended to 500MB for compressed file contents; these values can be modified on the GEODI server.

Metadata can be defined within the settings file for parsing files from clients. The values used in the default settings are visible in the example file provided. Searching with metadata is performed using the format `MetadataName:Value`. Once defined, the metadata and their corresponding values will be visible within the GEODI search interface.

The GDE API can be accessed using a browser. To get the status of the GDE Agent, one can use `http://<GEODI Server Address>:1982/DEW?op=GetStatus`, where the default port is 1982 but may vary. To retrieve GDE agent errors, the call `http://<GEODI Server Address>:1982/DEW?op=GetLastError` can be used; this call returns null if no error is present.

GDE agents are designed to check for updates every two days. If new versions are available, they automatically update themselves via the GEODI server, eliminating the need for manual intervention.

Installing GDE as a Windows Service is an option primarily used for indexing and discovering FileServers with GDE. In addition to standard Windows MSI requirements, the Windows Service user must possess read-only access to the FileServer directories. A separate configuration file needs to be created under the GEODI Server for each File Server to define specific directories for indexing and other rules. After GDE installation on Windows, it can be converted into a service using the `WindowsServiceInstall.bat` file located in the same directory. The service mode can be removed using the `WindowsServiceUninstall.bat` file. When operating in service mode, a logged-in user is not required for the service to function.