An ILoginProvider implementation or an alternative method uses existing ILoginProvider implementations. This is a secure server-based method, which is preferred if a user is already logged in. GEODI Oauth2 includes a client, and if the system to be integrated for Single Sign-On (SSO) supports login with Oauth2, simple definitions can be made to provide a common login interface and common session usage via GEODI.

The GetAutoLoginLink service allows an application to redirect its user to a GEODI interface without requiring a login screen. Links obtained via this service do not require a login page, and the user specified by the trusted application is considered to be logged in to the system. Only applications defined under Settings/ClientToken can utilize this service, and the application is validated by making a request to the ValidateURL specified in its definition.

The GetAutoLoginLink request uses the format [GEODIURL]/TokenHandler?op=GetAutoLoginLink&ClientID=[ClientID]&ClientValidator=[ClientValidator]&LoginUser=[LoginUser]&UserSession=[Token]. This request includes several parameters: ClientID, ClientValidator, LoginUser, and UserSession. Optional parameters include IPFilter and TimeOutMinute.

The ClientID parameter is defined under Settings/ClientToken, where its desired complexity can be specified. The ClientValidator is a key defined by the requesting application, recommended to be encrypted data with time information. It is expected to be validated by requesting the ValidateURL in Settings/ClientToken and receiving an "OK" response.

The LoginUser parameter represents the user information logged in the requesting application. For an LDAP user, only the user name, LDAP:Domain\UserName, or LDAP:UserName can be passed. If the domain is not passed for an LDAP user, GEODI uses the registered LDAP domain address of the user of its application. For a GEODI user, GEODI:UserName must be passed.

The UserSession parameter is the Token information, which can be obtained using the information provided on the "Generating a GEODI Token" page. This token must have access to the GetAutoLoginLink service. IPFilter is an optional parameter that specifies the IP filter where the obtained link will work. TimeOutMinute is another optional parameter used to indicate how long it is possible to log into GEODI with the obtained link, with a default value of 120 minutes.

For the workflow, a UTF8 encoding definition should be saved in a jSettings file and placed in the Settings/ClientToken folder that the GEODI application can access. An example definition includes ClientID:"MyClientID", ValidateURL: "http(s)://yourhost/....?validator={ClientValidator}", and GEODIRequestHeader:"GEODI_Request". The ClientValidator is passed between request headers, even if {ClientValidator} is used in the ValidateURL content. If a GEODIRequestHeader definition is made, this information is added to the ValidateURL request as a header, which can be used to verify that the calling application is GEODI.

The HttpMethod for the service can be GET or POST. Expected errors include 401 Unauthorized access/Access denied, 403 Forbidden, 511 Network Authentication Required, 452 ClientValidator could not be verified, 453 LoginUser required, 454 Invalid Client Id or empty ValidateUrl, 455 LDAP domain not found (specifically when trying to find the LDAP domain when username is passed as LDAP: username), and 500 for other errors or Web Request errors.

The expected result of the GetAutoLoginLink service is the URL containing the Token information. An example application is a .Net 3.5 ClientToken WebHandler (C#). The GetAutoLoginToken service has the same definition as GetAutoLoginLink, but it returns only the Token, not the URL combined with the Token.